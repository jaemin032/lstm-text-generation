"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const confusion_matrix_1 = require("../render/confusion_matrix");
const render_utils_1 = require("../render/render_utils");
const table_1 = require("../render/table");
function showPerClassAccuracy(container, classAccuracy, classLabels) {
    return __awaiter(this, void 0, void 0, function* () {
        const drawArea = render_utils_1.getDrawArea(container);
        const headers = [
            'Class',
            'Accuracy',
            '# Samples',
        ];
        const values = [];
        for (let i = 0; i < classAccuracy.length; i++) {
            const label = classLabels ? classLabels[i] : i.toString();
            const classAcc = classAccuracy[i];
            values.push([label, classAcc.accuracy, classAcc.count]);
        }
        return table_1.renderTable({ headers, values }, drawArea);
    });
}
exports.showPerClassAccuracy = showPerClassAccuracy;
function showConfusionMatrix(container, confusionMatrix, classLabels) {
    return __awaiter(this, void 0, void 0, function* () {
        const drawArea = render_utils_1.getDrawArea(container);
        const confusionMatrixData = {
            values: confusionMatrix,
            labels: classLabels,
        };
        return confusion_matrix_1.renderConfusionMatrix(confusionMatrixData, drawArea, {
            height: 450,
        });
    });
}
exports.showConfusionMatrix = showConfusionMatrix;
//# sourceMappingURL=quality.js.map